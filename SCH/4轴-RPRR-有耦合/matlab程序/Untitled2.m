clear;%清空工作区缓存数据
clc;%清空历史命令

data=csvread('C:\Users\NeverRobot\Desktop\debug.txt');%导入debug数据为原始数据矩阵(文件路径根据需要修改)

q=data;%位姿矩阵赋值
n=(q(:,2)<0) | (q(:,2)>33);%标记位姿矩阵中非插补数据的行(类似77777、88888、99999所在的数据行)
[m,~]=find(q(:,end)==22);%查找暂停所在行号
x=q(m-1,1);%查找暂停所在行的行编号

q(n,:)=[];%仅保留插补计算的数据行(排除类似77777、88888、99999所在的数据行)
q=q(:,1:6);%仅保留数据行号和关节空间4个轴的位置插补数据
for i=1:length(x)
    [x(i),~]=find(q(:,1)==x(i));%输出此时暂停行编号所在的行号
end

% cmdj=[1,2,4,5,9,10,21];
% cmdl=[11,14,16,19,23,26,28,31];
%----------------------------------------------------
% n=size(p,1);%位姿矩阵的行数
% m=size(p,2);%位姿矩阵的列数
% for i=2:n
%     for j=2:m
%         v(i-1,j-1)=(p(i,j)-p(i-1,j))/0.008;%根据位姿矩阵计算速度矩阵(每一列为一个轴)
%     end
% end

n=size(q,1);
p=zeros(n,4);

for i=1:n
    p(i,:)=fkine(q(i,3:6));%计算笛卡尔空间坐标
end

figure(1);%绘图1
line=q(1,2);
i=1;
for j=1:n
    if(line~=q(j,2))
        plot3(p(i:j-1,1),p(i:j-1,2),p(i:j-1,3));
        k=randi([i,j-1]);
        text(p(k,1),p(k,2),p(k,3),num2str(line));
        hold on;
        
        line=q(j,2);
        i=j;
    end
end
plot3(p(x,1),p(x,2),p(x,3),'rp');
plot3(p(x-100,1),p(x-100,2),p(x-100,3),'bx');
plot3(p(x+100,1),p(x+100,2),p(x+100,3),'gx');
xlabel('x');
ylabel('y');
zlabel('z');

% figure(1);%绘图1
% x=1:1:size(v,1);%横坐标取值赋值
% plot(x,v(:,1), x,v(:,2));%绘制4个轴速度曲线
% title('单轴速度');%图1的标题
% legend('xv','yv');%添加图例说明
% hold on;%图1保持
% 
% %----------------------------------------------------
% n=size(v,1);%速度矩阵的行数
% % m=size(v,2);%速度矩阵的列数
% for i=2:n
%     a(i-1,:)=(v(i,:)-v(i-1,:))/0.008;%根据速度矩阵计算加速度矩阵(每一列为一个轴)
% end
% 
% figure(2);%绘图2
% x=1:1:size(a,1);%横坐标取值赋值
% plot(x,a(:,1), x,a(:,2));%绘制4个轴加速度曲线
% title('单轴加速度');%图2的标题
% legend('xa', 'ya');%添加图例说明
% hold on;%图2保持
% 
% %----------------------------------------------------
% n=size(a,1);%加速度矩阵的行数
% % m=size(a,2);%加速度矩阵的列数
% for i=2:n
%     aa(i-1,:)=(a(i,:)-a(i-1,:))/0.008;%根据加速度矩阵计算加加速度矩阵(每一列为一个轴)
% end
% 
% figure(3);%绘图3
% x=1:1:size(aa,1);%横坐标取值赋值
% plot(x,aa(:,1), x,aa(:,2));%绘制4个轴加速度曲线
% title('单轴加加速度');%图3的标题
% legend('xj','yj');%添加图例说明
% hold on;%图3保持
% 
% %----------------------------------------------------
% n=size(a,1);%速度矩阵的行数
% for i=1:n
%     c(i)=sqrt(v(i,1)^2+v(i,2)^2);%根据xyz轴速度计算末端合成速度矩阵
% end
% 
% figure(4);%绘图4
% x=1:1:size(c,2);%横坐标取值赋值
% plot(x,c(1:end));%绘制末端合成速度曲线
% legend('v_t');%添加图例说明
% title('末端点空间合成速度');%图4的标题
% hold on;%图4保持

% for i=1:size(p,1)
%     joint(i,1:4)=ikine(p(i,2:end));
% end
% figure(5)
% x=1:1:size(joint,1);
% plot(x,joint(1:end,1), x,joint(1:end,2));
% hold on;
% 
% figure(6)
% n=size(joint,1);%速度矩阵的行数
% for i=2:n
%     v_j(i-1,:)=(joint(i,1:4)-joint(i-1,1:4))/0.008;%根据速度矩阵计算加速度矩阵(每一列为一个轴)
% end
% plot(v_j(1:end,1));
% hold on;
% plot(v_j(1:end,2));
% hold on;
% plot(v_j(1:end,3));

% figure(8);
% plot(p(:,2),p(:,3),'b-');
% hold on;
% p1=[1387.278, 721.73, 432.034, -180.0, 0, 0];
% p2=[982.366, 670.186, 427.210, 180.0, 0, 0];
% p3=[1124.32, -317.188, 424.850, 180.0, 0, 0];
% px=[p1(1),p2(1),p3(1)];
% py=[p1(2),p2(2),p3(2)];
% pz=[p1(3),p2(3),p3(3)];
% plot(px,py,'r--o');
